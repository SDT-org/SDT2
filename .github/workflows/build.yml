name: Build SDT2
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: ubuntu-latest
            arch: x64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install virtualenv
        run: pip install virtualenv

      - uses: oven-sh/setup-bun@v2

      - name: macOS - Install dependencies
        if: runner.os == 'macOS'
        run: brew install autoconf automake libtool

      - name: Run init
        run: bun run init

      - name: macOS - Build
        if: matrix.os == 'macos-latest'
        run: |
          source venv-pywebview/bin/activate
          bun run build

      - name: Linux - Build
        if: matrix.os == 'ubuntu-latest'
        run: |
          source venv-pywebview/bin/activate
          bun run build

      - name: Windows - Build
        if: matrix.os == 'windows-latest'
        run: |
          venv-pywebview\\Scripts\\activate
          bun run build

      - name: macOS - Prepare artifact
        if: matrix.os == 'macos-latest'
        run: |
          cd build
          zip -r SDT2.app.zip SDT2.app

      - name: Ubuntu - Set execute permissions
        if: matrix.os == 'ubuntu-latest' || (matrix.os == 'ubuntu-22.04' && matrix.arch == 'arm64')
        run: chmod +x build/SDT2

      - name: Windows - Sign EXE
        if: matrix.os == 'windows-latest'
        uses: azure/trusted-signing-action@v0.4.0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: ${{ secrets.AZURE_ENDPOINT }}
          code-signing-account-name: ${{ secrets.AZURE_CODE_SIGNING_NAME }}
          certificate-profile-name: ${{ secrets.AZURE_CERT_PROFILE_NAME }}
          files-folder: build
          files-folder-filter: exe
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build-output
          path: |
            ${{ matrix.os == 'windows-latest' && 'build/SDT2.exe' || '' }}
            ${{ matrix.os == 'macos-latest' && 'build/SDT2.app.zip' || '' }}
            ${{ matrix.os == 'ubuntu-latest' && 'build/SDT2' || '' }}
            ${{ matrix.os == 'ubuntu-22.04' && matrix.arch == 'arm64' && 'build/SDT2' || '' }}
